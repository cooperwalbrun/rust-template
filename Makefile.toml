[tasks.format]
description = "Format all source files and write changes to them where possible."
install_crate = { rustup_component_name = "rustfmt" }
command = "cargo"
args = ["fmt"]

[tasks.format-ci]
description = "Format all source files."
install_crate = { rustup_component_name = "rustfmt" }
command = "cargo"
args = ["fmt", "--check"]

[tasks.lint]
description = "Lint all source files."
install_crate = { rustup_component_name = "clippy" }
command = "cargo"
args = ["clippy"]

[tasks.lint-watch]
description = "Monitor and lint all source files continuously anytime one of them changes."
dependencies = ["lint"]
watch = true

[tasks.clean]
description = "Clean up temporary files generated by the Rust compiler."
command = "cargo"
args = ["clean"]

[tasks.build]
description = "Compile the source code."
command = "cargo"
args = ["build"]
dependencies = ["lint"]

[tasks.run]
description = "Run the application."
env = { RUST_BACKTRACE = 1 }
command = "cargo"
args = ["run"]
dependencies = ["build"]

[tasks.test]
description = "Run all unit tests."
env = { RUST_BACKTRACE = 1 }
command = "cargo"
args = ["test", "--tests"]
dependencies = ["build"]

[tasks.test-coverage]
description = "Run code coverage analysis and write a tabulated report to STDOUT."
install_crate = "cargo-llvm-cov"
env = { RUST_BACKTRACE = 1 }
command = "cargo"
args = ["llvm-cov"]
dependencies = ["build"]

[tasks.test-coverage-ci]
description = "Run code coverage analysis and write a report to a text file in LCOV format."
install_crate = "cargo-llvm-cov"
env = { RUST_BACKTRACE = 1 }
command = "cargo"
args = ["llvm-cov", "--lcov", "--output-path", "lcov.info"]
dependencies = ["build"]
